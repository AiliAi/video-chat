{"version":3,"sources":["routes/CreateRoom.js","routes/Room.js","App.js","reportWebVitals.js","index.js"],"names":["CreateRoom","props","onClick","id","uuid","history","push","Room","userVideo","useRef","partnerVideo","peerRef","socketRef","otherUser","userStream","createPeer","userID","peer","RTCPeerConnection","iceServers","urls","credential","username","onicecandidate","handleICECandidateEvent","ontrack","handleTrackEvent","onnegotiationneeded","current","createOffer","then","offer","setLocalDescription","payload","target","caller","sdp","localDescription","emit","catch","e","console","log","handleNegotiationNeededEvent","handleRecieveCall","incoming","desc","RTCSessionDescription","setRemoteDescription","getTracks","forEach","track","addTrack","createAnswer","answer","handleAnswer","message","candidate","handleNewICECandidateMsg","RTCIceCandidate","addIceCandidate","srcObject","streams","useEffect","navigator","mediaDevices","getUserMedia","audio","video","stream","io","connect","match","params","roomID","on","callUser","autoPlay","ref","App","className","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAceA,EAXI,SAACC,GAMhB,OACI,wBAAQC,QANZ,WACI,IAAMC,EAAKC,cACXH,EAAMI,QAAQC,KAAd,gBAA4BH,KAI5B,0B,iBCwHOI,EA/HF,SAACN,GACV,IAAMO,EAAYC,mBACZC,EAAeD,mBACfE,EAAUF,mBACVG,EAAYH,mBACZI,EAAYJ,mBACZK,EAAaL,mBAkCnB,SAASM,EAAWC,GAChB,IAAMC,EAAO,IAAIC,kBAAkB,CAC/BC,WAAY,CACR,CACIC,KAAM,8BAEV,CACIA,KAAM,wBACNC,WAAY,SACZC,SAAU,sBAStB,OAJAL,EAAKM,eAAiBC,EACtBP,EAAKQ,QAAUC,EACfT,EAAKU,oBAAsB,kBAK/B,SAAsCX,GAClCL,EAAQiB,QAAQC,cAAcC,MAAK,SAAAC,GAC/B,OAAOpB,EAAQiB,QAAQI,oBAAoBD,MAC5CD,MAAK,WACJ,IAAMG,EAAU,CACZC,OAAQlB,EACRmB,OAAQvB,EAAUgB,QAAQzB,GAC1BiC,IAAKzB,EAAQiB,QAAQS,kBAEzBzB,EAAUgB,QAAQU,KAAK,QAASL,MACjCM,OAAM,SAAAC,GAAC,OAAIC,QAAQC,IAAIF,MAfOG,CAA6B3B,IAEvDC,EAgBX,SAAS2B,EAAkBC,GACvBlC,EAAQiB,QAAUb,IAClB,IAAM+B,EAAO,IAAIC,sBAAsBF,EAAST,KAChDzB,EAAQiB,QAAQoB,qBAAqBF,GAAMhB,MAAK,WAC5ChB,EAAWc,QAAQqB,YAAYC,SAAQ,SAAAC,GAAK,OAAIxC,EAAQiB,QAAQwB,SAASD,EAAOrC,EAAWc,eAC5FE,MAAK,WACJ,OAAOnB,EAAQiB,QAAQyB,kBACxBvB,MAAK,SAAAwB,GACJ,OAAO3C,EAAQiB,QAAQI,oBAAoBsB,MAC5CxB,MAAK,WACJ,IAAMG,EAAU,CACZC,OAAQW,EAASV,OACjBA,OAAQvB,EAAUgB,QAAQzB,GAC1BiC,IAAKzB,EAAQiB,QAAQS,kBAEzBzB,EAAUgB,QAAQU,KAAK,SAAUL,MAIzC,SAASsB,EAAaC,GAClB,IAAMV,EAAO,IAAIC,sBAAsBS,EAAQpB,KAC/CzB,EAAQiB,QAAQoB,qBAAqBF,GAAMP,OAAM,SAAAC,GAAC,OAAIC,QAAQC,IAAIF,MAGtE,SAAShB,EAAwBgB,GAC7B,GAAIA,EAAEiB,UAAW,CACb,IAAMxB,EAAU,CACZC,OAAQrB,EAAUe,QAClB6B,UAAWjB,EAAEiB,WAEjB7C,EAAUgB,QAAQU,KAAK,gBAAiBL,IAIhD,SAASyB,EAAyBb,GAC9B,IAAMY,EAAY,IAAIE,gBAAgBd,GAEtClC,EAAQiB,QAAQgC,gBAAgBH,GAC3BlB,OAAM,SAAAC,GAAC,OAAIC,QAAQC,IAAIF,MAGhC,SAASd,EAAiBc,GACtB9B,EAAakB,QAAQiC,UAAYrB,EAAEsB,QAAQ,GAG/C,OA/GAC,qBAAU,WACNC,UAAUC,aAAaC,aAAa,CAAEC,OAAO,EAAMC,OAAO,IAAQtC,MAAK,SAAAuC,GACnE7D,EAAUoB,QAAQiC,UAAYQ,EAC9BvD,EAAWc,QAAUyC,EAErBzD,EAAUgB,QAAU0C,IAAGC,QAAQ,KAC/B3D,EAAUgB,QAAQU,KAAK,YAAarC,EAAMuE,MAAMC,OAAOC,QAEvD9D,EAAUgB,QAAQ+C,GAAG,cAAc,SAAA3D,IAmB3C,SAAkBA,GACdL,EAAQiB,QAAUb,EAAWC,GAC7BF,EAAWc,QAAQqB,YAAYC,SAAQ,SAAAC,GAAK,OAAIxC,EAAQiB,QAAQwB,SAASD,EAAOrC,EAAWc,YApBnFgD,CAAS5D,GACTH,EAAUe,QAAUZ,KAGxBJ,EAAUgB,QAAQ+C,GAAG,eAAe,SAAA3D,GAChCH,EAAUe,QAAUZ,KAGxBJ,EAAUgB,QAAQ+C,GAAG,QAAS/B,GAE9BhC,EAAUgB,QAAQ+C,GAAG,SAAUpB,GAE/B3C,EAAUgB,QAAQ+C,GAAG,gBAAiBjB,QAI3C,IAuFC,gCACI,uBAAOmB,UAAQ,EAACC,IAAKtE,IACrB,uBAAOqE,UAAQ,EAACC,IAAKpE,Q,MC1GlBqE,MAbf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWnF,IACjC,cAAC,IAAD,CAAOiF,KAAK,gBAAgBE,UAAW5E,YCAlC6E,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxD,MAAK,YAAkD,IAA/CyD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ec0f706a.chunk.js","sourcesContent":["import React from \"react\";\nimport { v1 as uuid } from \"uuid\";\n\nconst CreateRoom = (props) => {\n    function create() {\n        const id = uuid();\n        props.history.push(`/room/${id}`);\n    }\n\n    return (\n        <button onClick={create}>Create Room</button>\n    );\n}\n\nexport default CreateRoom;","import React, { useRef, useEffect } from \"react\";\nimport io from \"socket.io-client\";\n\nconst Room = (props) => {\n    const userVideo = useRef();\n    const partnerVideo = useRef();\n    const peerRef = useRef();\n    const socketRef = useRef();\n    const otherUser = useRef();\n    const userStream = useRef();\n\n    useEffect(() => {\n        navigator.mediaDevices.getUserMedia({ audio: true, video: true }).then(stream => {\n            userVideo.current.srcObject = stream;\n            userStream.current = stream;\n\n            socketRef.current = io.connect(\"/\");\n            socketRef.current.emit(\"join room\", props.match.params.roomID);\n\n            socketRef.current.on('other user', userID => {\n                callUser(userID);\n                otherUser.current = userID;\n            });\n\n            socketRef.current.on(\"user joined\", userID => {\n                otherUser.current = userID;\n            });\n\n            socketRef.current.on(\"offer\", handleRecieveCall);\n\n            socketRef.current.on(\"answer\", handleAnswer);\n\n            socketRef.current.on(\"ice-candidate\", handleNewICECandidateMsg);\n        });\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    function callUser(userID) {\n        peerRef.current = createPeer(userID);\n        userStream.current.getTracks().forEach(track => peerRef.current.addTrack(track, userStream.current));\n    }\n\n    function createPeer(userID) {\n        const peer = new RTCPeerConnection({\n            iceServers: [\n                {\n                    urls: \"stun:stun.stunprotocol.org\"\n                },\n                {\n                    urls: 'turn:numb.viagenie.ca',\n                    credential: 'muazkh',\n                    username: 'webrtc@live.com'\n                },\n            ]\n        });\n\n        peer.onicecandidate = handleICECandidateEvent;\n        peer.ontrack = handleTrackEvent;\n        peer.onnegotiationneeded = () => handleNegotiationNeededEvent(userID);\n\n        return peer;\n    }\n\n    function handleNegotiationNeededEvent(userID) {\n        peerRef.current.createOffer().then(offer => {\n            return peerRef.current.setLocalDescription(offer);\n        }).then(() => {\n            const payload = {\n                target: userID,\n                caller: socketRef.current.id,\n                sdp: peerRef.current.localDescription\n            };\n            socketRef.current.emit(\"offer\", payload);\n        }).catch(e => console.log(e));\n    }\n\n    function handleRecieveCall(incoming) {\n        peerRef.current = createPeer();\n        const desc = new RTCSessionDescription(incoming.sdp);\n        peerRef.current.setRemoteDescription(desc).then(() => {\n            userStream.current.getTracks().forEach(track => peerRef.current.addTrack(track, userStream.current));\n        }).then(() => {\n            return peerRef.current.createAnswer();\n        }).then(answer => {\n            return peerRef.current.setLocalDescription(answer);\n        }).then(() => {\n            const payload = {\n                target: incoming.caller,\n                caller: socketRef.current.id,\n                sdp: peerRef.current.localDescription\n            }\n            socketRef.current.emit(\"answer\", payload);\n        })\n    }\n\n    function handleAnswer(message) {\n        const desc = new RTCSessionDescription(message.sdp);\n        peerRef.current.setRemoteDescription(desc).catch(e => console.log(e));\n    }\n\n    function handleICECandidateEvent(e) {\n        if (e.candidate) {\n            const payload = {\n                target: otherUser.current,\n                candidate: e.candidate,\n            }\n            socketRef.current.emit(\"ice-candidate\", payload);\n        }\n    }\n\n    function handleNewICECandidateMsg(incoming) {\n        const candidate = new RTCIceCandidate(incoming);\n\n        peerRef.current.addIceCandidate(candidate)\n            .catch(e => console.log(e));\n    }\n\n    function handleTrackEvent(e) {\n        partnerVideo.current.srcObject = e.streams[0];\n    };\n\n    return (\n        <div>\n            <video autoPlay ref={userVideo} />\n            <video autoPlay ref={partnerVideo} />\n        </div>\n    );\n};\n\nexport default Room;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport CreateRoom from \"./routes/CreateRoom\";\nimport Room from \"./routes/Room\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/\" exact component={CreateRoom} />\n          <Route path=\"/room/:roomID\" component={Room} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}